2020-04-03  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): Release 0.0.4

	* src/simdjson_example.cpp (validateJSON): Updated

	* src/simdjson_example.cpp (parseExample): Added simple example (but
	only after shipping 0.0.4 to CRAN)

2020-04-02  Dirk Eddelbuettel  <edd@debian.org>

	* inst/include/simdjson.h: Upgraded to simdjson 0.3 and 0.3.1
	* inst/include/simdjson.cpp: Idem

	* inst/include/simdjson.h: Removed four ';', also sent upstream

2020-03-25  Dirk Eddelbuettel  <edd@debian.org>

	* README.md: Add a last-commit badge

2020-03-03  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): Release 0.0.3

2020-03-02  Dirk Eddelbuettel  <edd@debian.org>

	* R/validateJSON.R: Run example only if architecture is supported
	* man/validateJSON.Rd: Idem

	* inst/tinytest/test_validation.R: Run testfile only if architecture
	is supported

	* cleanup: Add helper script

2020-02-25  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): Roll minor version and date

	* configure: Add simple check for C++17 based on the R configuration
	* src/Makevars.in: Configure C++17 if seen with R

	* src/simdjson_example.cpp (unsupportedArchitecture): Check for CPU
	architectures by relying in simdjson active_implemenation->name()

	* R/init.R (.onAttach): Flag unsupported architectures on startup

2020-02-22  Dirk Eddelbuettel  <edd@debian.org>

	* inst/include/simdjson.cpp: Synced with upstream
	* inst/include/simdjson.h: Synced with upstream

2020-02-21  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): Release 0.0.2

2020-02-20  Dirk Eddelbuettel  <edd@debian.org>

	* src/simdjson_example.cpp (validateJSON): Protect function body by
	#define for sufficient C++17 standard
	(cppVersion): New (internal) helper function returning C++ standard

	* R/init.R (.onAttach): Flag older compiler on startup

	* R/validateJSON.R (validateJSON): Wrap call in Sys.glob() to expand ~

2020-02-13  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): Roll minor version and date

	* inst/include/simdjson.cpp: Synced with upstream
	* inst/include/simdjson.h: Idem

	* inst/NEWS.Rd: Added

2020-02-12  Dirk Eddelbuettel  <edd@debian.org>

	* README.md: Correct two badge URLs now that the package is on CRAN,
	mention performance impact of turning computed GOTOs off

2020-01-27  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version, Date): Roll minor version and date

	* src/Makevars: Use #define to deactivate compiled GOTO

	* inst/include/simdjson.cpp: Synced with upstream
	* inst/include/simdjson.h: Idem

2020-01-25  Dirk Eddelbuettel  <edd@debian.org>

	* inst/include/simdjson.h: Comment-out #define for
	SIMDJSON_USE_COMPUTED_GOTO to suppress one -pedantic message

	* tests/tinytest.R: Added tinytest support
	* inst/tinytest/test_validation.R: Ditt
	* DESCRIPTION: Added Suggests: for tinytest

	* README.md: Reworded contributions a little (GH issue #2)
	* DESCRIPTION: Ditto, also rolled Date

2020-01-20  Dirk Eddelbuettel  <edd@debian.org>

	* demo/simpleBenchmark.R: Add benchmark comparing JSON validation
	* docs/rcppsimdjson_benchmark.png: Autoplot of benchmark results
	* README.md: Added benchmark result and plot, small edits

	* .travis.yml: Added to support continuous integration

2020-01-19  Dirk Eddelbuettel  <edd@debian.org>

	* inst/include/simdjson.cpp: Replace std::cerr and fprintf(stderr,
	...)  with Rcpp::Rcerr and REprintf(...) to appease R CMD check

2020-01-18  Dirk Eddelbuettel  <edd@debian.org>

	* DESCRIPTION (Version,Date): Initial and very raw version 0.0.1
	(SystemRequirements): Declare C++17
	(OS_type): Restrict to unix (due to older C++ compiler on Windows)

	* README.md: Added

	* .Rbuildignore: Exclude the largers example JSON files

